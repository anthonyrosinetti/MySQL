create or replace view `boryl-hr.candidat_anthony.analytics_analysis` as

------------------------------
-- UNNESTING EVENT-BASED DATA
------------------------------
with unnested_event_data as (
  select
    parse_date('%Y%m%d', event_date) as event_date,
    timestamp_micros(event_timestamp) as event_timestamp,
    concat(user_pseudo_id,(select value.int_value from unnest(event_params) where key = 'ga_session_id')) as session_id,
    event_name,
    (select value.string_value from unnest(event_params) where key = 'source') as source,
    (select value.string_value from unnest(event_params) where key = 'medium') as medium,
    (select value.string_value from unnest(event_params) where key = 'campaign') as campaign,
    (select value.string_value from unnest(event_params) where key = 'content') as content,
    (select value.string_value from unnest(event_params) where key = 'page_location') as page_location,
    case when event_name = 'generate_lead' then 1 else 0 end as generate_lead
from
  `boryl-hr.googleanalytics_55555555.events_*`
)

-------------------------------------------------------------------------------------------------
-- TRANSFORMING UNNESTED EVENT-BASED DATA INTO SESSION-BASED DATA WITH session_with_leads BOOLEAN APPENDED
-------------------------------------------------------------------------------------------------
select
  date,
  session_id,
  landing_page,
  utm_source,
  utm_medium,
  utm_campaign,
  utm_content,
  session_with_leads
from (
  select
  first_value(event_date) over (partition by session_id order by event_timestamp asc) as date,
  session_id,
  first_value(page_location) over (partition by session_id order by event_timestamp asc) as landing_page,
  first_value(source ignore nulls) over (partition by session_id order by event_timestamp asc rows between unbounded preceding and unbounded following) as utm_source,
  first_value(medium ignore nulls) over (partition by session_id order by event_timestamp asc rows between unbounded preceding and unbounded following) as utm_medium,
  first_value(campaign ignore nulls) over (partition by session_id order by event_timestamp asc rows between unbounded preceding and unbounded following) as utm_campaign,
  first_value(content ignore nulls) over (partition by session_id order by event_timestamp asc rows between unbounded preceding and unbounded following) as utm_content,
  max(generate_lead) over (partition by session_id) as session_with_leads
from unnested_event_data
)
group by
  date,
  session_id,
  landing_page,
  utm_source,
  utm_medium,
  utm_campaign,
  utm_content,
  session_with_leads
