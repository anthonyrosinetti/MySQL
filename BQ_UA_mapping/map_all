CREATE OR REPLACE TABLE `midyear-calling-214820.21702316.april_new_data`
AS
SELECT
  fullVisitorId,
  visitId,
  sessionId,
  MAX(hitNumber) AS maxHitNumber,
  Max(type) as type,
  pagePath as pagepath,
  pageTitle AS Page_Title,
  MAX(hostname) AS Hostname,
  COUNT(DISTINCT CASE WHEN type = 'PAGE' THEN pagePath ELSE NULL END) AS Unique_PageViews,
  CASE
    WHEN isexit IS NOT NULL THEN avg(last_interaction - hit_time)
    ELSE avg(next_pageview - hit_time)
  END AS time_on_page,
  MAX(Campaign_name) AS Campaign_name,
  MAX(Campaign_code) AS Campaign_code,
  MAX(Campaign_Source) AS Campaign_Source,
  MAX(Campaign_Medium) AS Campaign_Medium,
  MAX(Keyword) AS Keyword,
  MAX(Adcontent) AS Adcontent,
  MAX(Device_Category) AS Device_Category,
  MAX(Region) AS Region,
  MAX(Default_channel_grouping) AS Default_channel_grouping,
  date,
  Year,
  Month,
  year_month,
  COUNT(distinct CASE WHEN type = 'EVENT' THEN CONCAT(eventAction, eventCategory, eventLabel) END) AS uniqueEvents,
  COUNT(CASE WHEN type = 'PAGE' THEN pagePath END) AS PageViews,
  sum(s_pageviews) as s_pageviews,
  SUM(CASE WHEN hitNumber = 1 THEN 1 ELSE 0 END) AS sessions,
 SUM(CASE WHEN total_events = 1 THEN 1 ELSE 0 END) AS bounces,
  SUM(Entrances) AS Entrances,
  SUM(Exits) AS Exits,
  sum(CASE WHEN hitNumber = 1 THEN total_time ELSE 0 END) AS Total_time,
  max(distinct CASE WHEN new_visits=1 then sessionid end) AS New_users,
  eventAction,
  eventCategory,
  eventLabel,
  MAX(previousPagePath) AS previousPagePath
FROM (
    SELECT
      fullVisitorId,
      visitId,
      CONCAT(CAST(fullVisitorId AS STRING), CAST(visitId AS STRING)) AS sessionId,
      hits.hitNumber as hitnumber,
      hits.type as type,
      hits.page.pagePath AS pagePath,
      LAG(hits.page.pagePath) OVER (PARTITION BY fullVisitorId, visitId ORDER BY hits.hitNumber) AS previousPagePath,
      hits.time as hit_time,
      MAX(IF(hits.isInteraction IS NOT NULL,
            hits.time / 1000,
            0)) OVER (PARTITION BY fullVisitorId, visitStartTime) AS last_interaction,
      LEAD(hits.time) OVER (PARTITION BY fullVisitorId, visitStartTime ORDER BY hits.time) AS next_pageview,
      hits.page.pageTitle AS pageTitle,
      hits.page.hostname AS hostname,
      hits.isexit,
      hits.eventInfo.eventAction AS eventAction,
      hits.eventInfo.eventCategory AS eventCategory,
      hits.eventInfo.eventLabel AS eventLabel,
      trafficSource.campaign AS Campaign_name,
      trafficSource.campaignCode AS Campaign_code,
      trafficSource.source AS Campaign_Source,
      trafficSource.medium AS Campaign_Medium,
      trafficSource.keyword AS Keyword,
      trafficSource.adContent AS Adcontent,
      device.deviceCategory AS Device_Category,
      geoNetwork.region AS Region,
      channelGrouping AS Default_channel_grouping,
      parse_date('%Y%m%d', date) AS date,
      EXTRACT(YEAR FROM parse_date('%Y%m%d', date)) AS Year,
      EXTRACT(MONTH FROM parse_date('%Y%m%d', date)) AS Month,
     PARSE_DATE("%Y-%m-%d", CONCAT(CAST(EXTRACT(YEAR FROM parse_date('%Y%m%d', date)) AS STRING), '-', LPAD(CAST(EXTRACT(MONTH FROM parse_date('%Y%m%d', date)) AS STRING), 2, '0'), '-01')) AS year_month,
      totals.hits AS total_events,
      totals.pageviews AS s_pageviews,
      totals.bounces AS bounces,
      CASE WHEN hits.isEntrance IS TRUE THEN 1 ELSE 0 END AS Entrances,
      CASE WHEN hits.isExit IS TRUE THEN 1 ELSE 0 END AS Exits,
      totals.timeOnSite AS Total_time,
      totals.newVisits as new_visits
    FROM `midyear-calling-214820.21702316.ga_sessions_*`,
    UNNEST(hits) AS hits
    WHERE _TABLE_SUFFIX BETWEEN '20240401' AND '20240410'
)
GROUP BY fullVisitorId, visitId, sessionId, date, Year, Month, year_month,pagePath,Page_Title,eventAction, eventCategory, eventLabel,isexit

